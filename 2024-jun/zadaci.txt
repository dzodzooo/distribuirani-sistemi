1.
	U. NET-u. koristeći gRPC, kreirati servis za upravljanje listom poruka. Servis treba da omogući klijentima da dodaju i brišu poruke, i prikažu sve poruke.
	Definisati proto fajl (message.proto) koji daje specifikaciju servisa i poruka. Servis treba da podržava sledeće operacije:
	SendMessage: dodaje novu poruku na listu.
	DeleteMessage: briše poruku sa zadatim ID-jem.
	ListMessages: Dobije tok podataka koji sadrži sve poruke.
	Implementirati gRPC server definisan u message.proto fajlu.

2.	Korišćenjem Java RMI tehnologije napisati simulaciju MQTT brokera. MQTT broker je server koji razmenjuje poruke izmedu klijenata korišćenjem topika. Topik predstavlja string na osnovu koga se poruke (definisane naslovom i sadržajem) filtriraju i dostavljaju odredenim klijentima. Neophodno je implementirati metodu subscribe kako bi se klijent pretplatio na poruke pristigle na odredeni topik, kao i metodu publish koja omogućava korisniku da pošalje poruku na željeni topik. Klijent ne kreira topik eksplicitno, već se topik. ukoliko ne postoji, kreira implicitno pozivom metode create Topic. Napisati serversku aplikaciju za hostovanje MQTT brokera i registrovati ga u RMI registar, kao i klijentsku aplikaciju koja će minimalno demonstrirati funkcionisanje istog.

3. Napisati MPI program koji vrši paralelni upis i čitanje binarne datoteke, prema sledećim zahtevima:
Svaki proces upisuje po 105 proizvoljnih celih brojeva u datoteku file1.dat. Upis se vrši upotrebom pojedinačnih pokazivača, dok redosled podataka u fajlu ide od podataka poslednjeg do podataka prvog procesa.
Ponovo otvoriti datoteku. Svaki proces vrši čitanje upravo upisanih podataka upotrebom funkcija sa eksplicitnim pomerajem.
Upravo pročitane podatke upisati u novu datoteku, na način prikazan na slici (za slučaj od 3 procesa).

U poslednjem zahtevu posebno obratiti pažnju na efikasnost paralelizacije upisa.

4. Koristeći WCF kreirati sistem za zakup skladišta. Potrebno je da servis podržava sledeće funkcionalnosti:
Zakup skladišta (proslediti Vlasnika(ime, prezime i jmbg) i skladište(ldSkladišta, početak zakupa, kraj zakupa, cena). 
Vraca listu svih aktivnih skladišta zadatog vlasnika.
Vraća listu svih vlasnika aktivnih skladišta.
Vraća listu svih skladišta i istoriju njihovih vlasnika (zakupa).
Obavezno izdvojiti interfejs. implementaciju, web.config (dovoljan je samo deo za setovanje servisa) i klijentsku stranu koja demonstrira rad servisa.

